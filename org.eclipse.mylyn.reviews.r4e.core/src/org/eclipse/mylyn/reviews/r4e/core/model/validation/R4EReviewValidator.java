/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.mylyn.reviews.r4e.core.model.validation;

import java.util.Date;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.EMap;

import org.eclipse.mylyn.reviews.r4e.core.model.R4EAnomaly;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EID;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EIDComponent;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EMeetingData;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EReviewDecision;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EReviewType;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EUser;

/**
 * A sample validator interface for {@link org.eclipse.mylyn.reviews.r4e.core.model.R4EReview}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface R4EReviewValidator {
	boolean validate();

	boolean validateName(String value);
	boolean validateProject(String value);
	boolean validateComponents(EList<String> value);
	boolean validateEntryCriteria(String value);
	boolean validateExtraNotes(String value);
	boolean validateObjectives(String value);
	boolean validateReferenceMaterial(String value);
	boolean validateDecision(R4EReviewDecision value);
	boolean validateStartDate(Date value);
	boolean validateEndDate(Date value);
	boolean validateXmlVersion(String value);
	boolean validateAnomalyTemplate(R4EAnomaly value);
	boolean validateType(R4EReviewType value);
	boolean validateUsersMap(EMap<String, R4EUser> value);
	boolean validateCreatedBy(R4EUser value);
	boolean validateIdsMap(EMap<R4EID, R4EIDComponent> value);
	boolean validateActiveMeeting(R4EMeetingData value);
}
