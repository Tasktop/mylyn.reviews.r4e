/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.mylyn.reviews.r4e.core.model.validation;

import java.util.Date;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.mylyn.reviews.frame.core.model.User;

import org.eclipse.mylyn.reviews.r4e.core.model.R4EAnomalyState;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EFileVersion;
import org.eclipse.mylyn.reviews.r4e.core.model.R4EParticipant;

import org.eclipse.mylyn.reviews.r4e.core.model.drules.R4EDesignRule;
import org.eclipse.mylyn.reviews.r4e.core.model.drules.R4EDesignRuleRank;

/**
 * A sample validator interface for {@link org.eclipse.mylyn.reviews.r4e.core.model.R4EAnomaly}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface R4EAnomalyValidator {
	boolean validate();

	boolean validateState(R4EAnomalyState value);
	boolean validateUserAssigned(User value);
	boolean validateUserFollowUp(User value);
	boolean validateUserDecision(User value);
	boolean validateDueDate(Date value);
	boolean validateRank(R4EDesignRuleRank value);
	boolean validateRule(R4EDesignRule value);
	boolean validateDecidedBy(R4EParticipant value);
	boolean validateFixedBy(R4EParticipant value);
	boolean validateFollowupBy(R4EParticipant value);
	boolean validateNotAcceptedReason(String value);
	boolean validateIsImported(boolean value);
	boolean validateFixedInVersion(R4EFileVersion value);
	boolean validateRuleID(String value);
	boolean validateDecidedByID(String value);
	boolean validateFixedByID(String value);
	boolean validateFollowUpByID(String value);
	boolean validateInfoatt(EMap<String, String> value);
}
